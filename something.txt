// 判定按鈕事件
        setInterval(function () {
            // 每秒觸發的判斷和操作
            var carouselElement = $(this).closest('.carousel');
            var currentSlideIndex = carouselElement.find('.carousel-item.active').index();

            var prevButton = $('.swipe-button.prev');
            var nextButton = $('.swipe-button.next');

            if (currentSlideIndex == 1) {
                $('.swipe-button.prev').prop('disabled', true);
                prevButton.removeClass('.swipe-button:hover').removeAttr('type', 'button');
                $('.swipe-button.next').prop('disabled', false);
                nextButton.addClass('your-css-class').attr('type', 'button');
            } else if (currentSlideIndex == 0) {
                $('.swipe-button.prev').prop('disabled', false);
                prevButton.addClass('your-css-class').attr('type', 'button');
                $('.swipe-button.next').prop('disabled', true);
                nextButton.removeClass('.swipe-button:hover').removeAttr('type', 'button');
            }
        }, 500);

---------------------------------------------------------------------------------------------------------
        //     performance.mark('start'); //檢測效能 耗時

                //     // 執行任務
                //     // ...


                //     // 結束計時
                //     performance.mark('end');
                //     performance.measure('task', 'start', 'end');

                //     // 獲取性能記錄
                //     const measurements = performance.getEntriesByName('task');
                //     console.log('執行時間：', measurements[0].duration);
            });


--------------------------------------------------------------------------------------------------
var carouselElement = $(this).closest('.carousel');
                var currentSlideIndex = carouselElement.find('.carousel-item.active').index(); //0
                var totalSlides = carouselElement.find('.carousel-item').length; //2
                console.log(currentSlideIndex + "+" + totalSlides)

                if ($(this).hasClass('prev')) {
                    var targetSlideIndex = (currentSlideIndex - 1 + totalSlides) % totalSlides;
                    carouselElement.carousel(targetSlideIndex);
                } else if ($(this).hasClass('next')) {
                    var targetSlideIndex = (currentSlideIndex + 1) % totalSlides;
                    carouselElement.carousel(targetSlideIndex);
                };

-------------------------------------------------------------------------------------------------
$(document).ready(function () {
            const container = $('.thumbnails');
            const scrollContainer = $('#scrollContainer');
            const scrollBar = $('.scrollBar');
            const scrollThumb = $('#scrollThumb');

            container.on('scroll', function () {
                const scrollPercentage = (container.scrollLeft() / (scrollContainer.outerWidth() - container.outerWidth())) * 100;
                scrollThumb.css('left', scrollPercentage + '%');
            });

            scrollThumb.on('mousedown', function (e) {
                const startX = e.clientX;
                const startScrollLeft = container.scrollLeft();

                $(document).on('mousemove', function (e) {
                    const deltaX = e.clientX - startX;
                    const scrollableWidth = scrollBar.outerWidth() - scrollThumb.outerWidth();
                    const scrollPercentage = (startScrollLeft + (deltaX / scrollableWidth) * (scrollContainer.outerWidth() - container.outerWidth()));
                    container.scrollLeft(scrollPercentage);
                });

                $(document).on('mouseup', function () {
                    $(document).off('mousemove');
                    $(document).off('mouseup');
                });
            });
        });

                        <div class="thumbnails">
                            <div class="sm-pics" id="scrollContainer">
                                <img src="img/1.jpg" alt="Thumbnail 1">
                                <img src="img/2.jpg" alt="Thumbnail 2">
                                <img src="img/3.jpg" alt="Thumbnail 3">
                                <img src="img/4.jpg" alt="Thumbnail 4">
                                <img src="img/1.jpg" alt="Thumbnail 1">
                                <img src="img/2.jpg" alt="Thumbnail 2">
                                <img src="img/3.jpg" alt="Thumbnail 3">
                                <img src="img/4.jpg" alt="Thumbnail 4">
                                <img src="img/1.jpg" alt="Thumbnail 1">
                                <img src="img/2.jpg" alt="Thumbnail 2">
                                <img src="img/3.jpg" alt="Thumbnail 3">
                                <img src="img/4.jpg" alt="Thumbnail 4">
                            </div>
                            <div class="scroll">
                                <div class="scrollBar">
                                    <div class="scroll-thumb" id="scrollThumb"></div>
                                </div>
                            </div>
                        </div>

                        //確保選取圖片沒有在可見範圍外
        $(document).ready(function () {
            var scrollContainer = $("#scrollContainer");
            var selectedImage = $(".sm-pics .selected");

            // 檢查選取的圖片是否在可見範圍內，若不在則捲動至可見範圍
            function ensureVisible() {
                var containerLeft = scrollContainer.scrollLeft();
                var containerRight = containerLeft + scrollContainer.width();
                var imageLeft = selectedImage.offset().left;
                var imageRight = imageLeft + selectedImage.outerWidth();

                // 若選取的圖片在可見範圍內，則不執行任何動作
                if (imageLeft >= containerLeft && imageRight <= containerRight) {
                    return;
                }

                // 若選取的圖片在可見範圍的左側，將捲動容器以使圖片出現在左側可見範圍內
                if (imageLeft < containerLeft) {
                    scrollContainer.scrollLeft(imageLeft);
                }
                // 若選取的圖片在可見範圍的右側，將捲動容器以使圖片出現在右側可見範圍內
                else if (imageRight > containerRight) {
                    var scrollAmount = imageRight - scrollContainer.width();
                    scrollContainer.scrollLeft(scrollAmount);
                }
            }

            // 初始化時確保選取的圖片在可見範圍內
            ensureVisible();

            // 監聽圖片的選取事件，選取時確保在可見範圍內
            $(".sm-pics img").on("click", function () {
                selectedImage = $(this);
                ensureVisible();
            });
        });


        -------------------------
        // $(".sm-pics img").click(function () {
        //     // 移除其他圖片的選擇樣式
        //     $(".sm-pics img").removeClass("selected");

        //     // 將點擊的圖片加上選擇樣式
        //     $(this).addClass("selected");
        // });

        // $(document).ready(function () {
        //     var prev = $(".prev");
        //     var next = $(".next");

        //     var currentIndex = 0;
        //     var img = $(".sm-pics img")
        //     console.log(img.length);
        //     /*初始化 第一張圖片被選擇*/
        //     $(img[currentIndex]).addClass("selected");

        //     prev.on("click", function () {
        //         $(img[currentIndex]).removeClass("selected");

        //         /*依索引值 選前一張圖片*/
        //         currentIndex--;

        //         if (currentIndex < 0) {
        //             currentIndex = img.length - 1;
        //         }

        //         $(img[currentIndex]).addClass("selected");
        //     });

        //     next.on("click", function () {
        //         $(img[currentIndex]).removeClass("selected");

        //         /*依索引值 選前一張圖片*/
        //         currentIndex++;

        //         if (currentIndex >= img.length) {
        //             currentIndex = 0;
        //         }

        //         $(img[currentIndex]).addClass("selected");
        //     });
        // });
